version: '3.9'

services:
  arangodb:
    image: arangodb:latest
    env_file:
      - ../.env
    ports:
      - "8529:8529"
    volumes:
      - arangodb_data_container:/var/lib/arangodb3
      - arangodb_apps_data_container:/var/lib/arangodb3-apps

  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - zk-data:/var/lib/zookeeper/data
      - zk-txn-logs:/var/lib/zookeeper/log
    healthcheck:
      test: nc -z localhost 2181 || exit
      interval: 10s 
      timeout: 5s 
      retries: 15

  broker:
    image: confluentinc/cp-kafka
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "19092:19092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "Users:1:1"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
    volumes:
      - inarious_kafka-data:/var/lib/inarious_kafka/data
    healthcheck:
      test: nc -z localhost 9092 || exit
      interval: 10s 
      timeout: 5s 
      retries: 15

  init-kafka:
    image: confluentinc/cp-kafka
    depends_on:
      broker:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server broker:9092 --list

      echo -e 'Creating kafka topic'
      kafka-topics --bootstrap-server broker:9092 --create --if-not-exists --topic Users --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server broker:9092 --list
      "

  uikafka:
    container_name: uikafka
    image: provectuslabs/kafka-ui
    environment:
      DYNAMIC_CONFIG_ENABLED: true 
    ports:
      - "8081:8080"
    volumes:
      - inarious_kafka-ui-config:/config.yml

  inarious:
    container_name: inarious
    build:
      context: ./
      dockerfile: fastapi.Dockerfile
    env_file:
      - ../.env
    ports:
      - "8082:8000"
    depends_on:
      broker:
        condition: service_healthy

  faust_service0:
    container_name: faust_service0
    build:
      context: ./
      dockerfile: faust.Dockerfile
    env_file:
      - ../.env
    depends_on:
      broker:
        condition: service_healthy

volumes:
  arangodb_data_container:
  arangodb_apps_data_container:
  zk-data:
  zk-txn-logs:
  inarious_kafka-ui-config:
  inarious_kafka-data: